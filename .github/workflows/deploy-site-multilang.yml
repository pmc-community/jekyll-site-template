name: Deploy Multilingual Jekyll site to Pages

on:
  push:
    branches: ["gh-pages"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout default (main) site
        uses: actions/checkout@v4

      - name: Set local variables
        id: set-vars
        run: |
          pyEnable=$(grep -Po 'pyEnable:\s*\K(true|false)' _data/buildConfig.yml)
          echo "pyEnable=$pyEnable" >> $GITHUB_OUTPUT

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Setup Python (if pyEnable is set)
        if: steps.set-vars.outputs.pyEnable == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Python dependencies (if pyEnable is set)
        if: steps.set-vars.outputs.pyEnable == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install tensorflow tensorflow-hub numpy pandas markdown transformers langdetect

      - name: Run Python pre-build scripts (if pyEnable is set)
        if: steps.set-vars.outputs.pyEnable == 'true'
        run: ./tools_py/preBuild-pyScripts

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build default language site
        run: bundle exec jekyll build --incremental --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
          JEKYLL_ACCESS_TOKEN: ${{ secrets.JEKYLL_ACCESS_TOKEN }}
          JEKYLL_GIT_USER: ${{ secrets.JEKYLL_GIT_USER }}
          CONSOLE_BLANK_SPINNER_CHARS: ${{ secrets.CONSOLE_BLANK_SPINNER_CHARS }}
          ALGOLIA_WRITE_API_KEY: ${{ secrets.ALGOLIA_WRITE_API_KEY }}
          ALGOLIA_INDEX: ${{ secrets.ALGOLIA_INDEX }}
          ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
          ALGOLIA_PUBLIC_API_KEY: ${{ secrets.ALGOLIA_PUBLIC_API_KEY }}
          ALGOLIA_SEARCH_ENABLED: ${{ secrets.ALGOLIA_SEARCH_ENABLED }}
          DEPLOY_PROD_BASE_URL: ${{ secrets.DEPLOY_PROD_BASE_URL }}
          NR_ENABLED: ${{ secrets.NR_ENABLED }}
          NR_BROWSER_ENABLED: ${{ secrets.NR_BROWSER_ENABLED }}
          NR_BROWSER_APP_ID: ${{ secrets.NR_BROWSER_APP_ID }}
          NR_ACCOUNT_ID: ${{ secrets.NR_ACCOUNT_ID }}
          NR_BROWSER_APP_LICENSE_KEY: ${{ secrets.NR_BROWSER_APP_LICENSE_KEY }}
          NR_BROWSER_BEACON: ${{ secrets.NR_BROWSER_BEACON }}

      - name: Check for `en` branch
        id: check-en
        run: |
          if git ls-remote --exit-code origin en; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build English site if branch exists
        if: steps.check-en.outputs.exists == 'true'
        run: |
          git clone --depth=1 --branch=en https://github.com/${{ github.repository }} temp-en
          cd temp-en
          bundle install
          JEKYLL_ENV=production \
          JEKYLL_ACCESS_TOKEN=${{ secrets.JEKYLL_ACCESS_TOKEN }} \
          JEKYLL_GIT_USER=${{ secrets.JEKYLL_GIT_USER }} \
          CONSOLE_BLANK_SPINNER_CHARS=${{ secrets.CONSOLE_BLANK_SPINNER_CHARS }} \
          ALGOLIA_WRITE_API_KEY=${{ secrets.ALGOLIA_WRITE_API_KEY }} \
          ALGOLIA_INDEX=${{ secrets.ALGOLIA_INDEX }} \
          ALGOLIA_APP_ID=${{ secrets.ALGOLIA_APP_ID }} \
          ALGOLIA_PUBLIC_API_KEY=${{ secrets.ALGOLIA_PUBLIC_API_KEY }} \
          ALGOLIA_SEARCH_ENABLED=${{ secrets.ALGOLIA_SEARCH_ENABLED }} \
          DEPLOY_PROD_BASE_URL=${{ secrets.DEPLOY_PROD_BASE_URL }} \
          NR_ENABLED=${{ secrets.NR_ENABLED }} \
          NR_BROWSER_ENABLED=${{ secrets.NR_BROWSER_ENABLED }} \
          NR_BROWSER_APP_ID=${{ secrets.NR_BROWSER_APP_ID }} \
          NR_ACCOUNT_ID=${{ secrets.NR_ACCOUNT_ID }} \
          NR_BROWSER_APP_LICENSE_KEY=${{ secrets.NR_BROWSER_APP_LICENSE_KEY }} \
          NR_BROWSER_BEACON=${{ secrets.NR_BROWSER_BEACON }} \
          bundle exec jekyll build --baseurl "/en" --destination ../_site/en

      - name: Check for `ro` branch
        id: check-ro
        run: |
          if git ls-remote --exit-code origin ro; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build Romanian site if branch exists
        if: steps.check-ro.outputs.exists == 'true'
        run: |
          git clone --depth=1 --branch=ro https://github.com/${{ github.repository }} temp-ro
          cd temp-ro
          bundle install
          JEKYLL_ENV=production \
          JEKYLL_ACCESS_TOKEN=${{ secrets.JEKYLL_ACCESS_TOKEN }} \
          JEKYLL_GIT_USER=${{ secrets.JEKYLL_GIT_USER }} \
          CONSOLE_BLANK_SPINNER_CHARS=${{ secrets.CONSOLE_BLANK_SPINNER_CHARS }} \
          ALGOLIA_WRITE_API_KEY=${{ secrets.ALGOLIA_WRITE_API_KEY }} \
          ALGOLIA_INDEX=${{ secrets.ALGOLIA_INDEX }} \
          ALGOLIA_APP_ID=${{ secrets.ALGOLIA_APP_ID }} \
          ALGOLIA_PUBLIC_API_KEY=${{ secrets.ALGOLIA_PUBLIC_API_KEY }} \
          ALGOLIA_SEARCH_ENABLED=${{ secrets.ALGOLIA_SEARCH_ENABLED }} \
          DEPLOY_PROD_BASE_URL=${{ secrets.DEPLOY_PROD_BASE_URL }} \
          NR_ENABLED=${{ secrets.NR_ENABLED }} \
          NR_BROWSER_ENABLED=${{ secrets.NR_BROWSER_ENABLED }} \
          NR_BROWSER_APP_ID=${{ secrets.NR_BROWSER_APP_ID }} \
          NR_ACCOUNT_ID=${{ secrets.NR_ACCOUNT_ID }} \
          NR_BROWSER_APP_LICENSE_KEY=${{ secrets.NR_BROWSER_APP_LICENSE_KEY }} \
          NR_BROWSER_BEACON=${{ secrets.NR_BROWSER_BEACON }} \
          bundle exec jekyll build --baseurl "/ro" --destination ../_site/ro

      - name: Upload final multilingual site (default + optional en/ro)
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
