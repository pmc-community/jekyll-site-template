docaroo allows to your documents. external content is important because it allows you to create of content and import these parts in multiple places in your documents. it is possible to import content from external public and private github repositories but you must be sure that the content you want to import is available at the time when you build your site , as the imported content is added at build time. it is also possible to , but be aware this type of content may be not indexed for search (when using algolia, capturing the client rendered content depends on the behaviour of the crawler and on the response time of the site; when using native search, it is not indexed at all). this content will be reflected in the page toc, you can tag (with custom tags) or classify (custom categories) based. on this content and you can also add comments to your docs based on this content, but this content will not be returned by site search features (regardless if you use native searching or algolia search). we recommend to use this type of content for short pieces of content that are not very relevant to the core subject of the documentation (such as some news or announcements). this type of content can be imported from any source that returns markdown and follows the same logic of selecting the content between start and end markers. this type of content can be imported only from as we currently do not support custom authentication on client side. it is also important to be aware of the api limitations of the source and to not abuse of the usage of run time imported content since this content is loaded each time when the page containing it is loaded (for example, github has some limits related to raw content reading api). currently we do not support run time content caching yet. wordpress observe the setting below. this setting makes that potential wordpress shortcodes that may be present in the content imported from external sources (in the case if that content is also used on a wordpress site) to be ignored, thus to not produce non-sense texts on your docs. if you are sure that the imported content does not contain wordpress shortcodes, you can set it to . be aware that when set to , texts in the form may not appear in your imported content import content from another file from your site, between start and end markers. markers can be set by you (in which case it must be in the from of html comments to not affect the rendering of the source file), or can be any placeholders (existing text) of the source file. the path to the source file should be given as relative path from the root documents directory. markers always check if the markers are present in the source file!!! lorem ipsum dolor sit amet, consectetur adipiscing elit. mauris sagittis dolor nec porttitor feugiat. fusce interdum, lacus eget tincidunt porta, mi nibh auctor velit, non dapibus dolor velit et leo. mauris semper nisi in elementum finibus. if you want to import the full source file, use the reserved marker. maecenas consequat elit at sollicitudin euismod. proin scelerisque urna ut ullamcorper bibendum. proin tristique, neque a accumsan consequat, sapien leo ultricies elit, eget congue neque massa sit amet sapien. cras finibus elit metus, semper faucibus urna viverra sit amet. aenean ornare pellentesque nulla, vitae interdum tellus pulvinar sed. aenean vulputate id est nec semper. aenean feugiat, justo ut lacinia feugiat, leo libero tincidunt nibh, ultrices auctor quam dui eget diam. morbi porta nulla in iaculis hendrerit. aenean eu convallis nibh. integer sed interdum lorem. maecenas tristique, turpis non malesuada facilisis, magna purus mollis justo, ultricies fringilla sapien quam at nisl. you can import multiple parts from a source file from you documentation. each part should be found between a start and end markers. parts can overlap. welcome to the documentation site builder guide — your comprehensive resource for learning how to create, build, and maintain high-quality documentation sites for any kind of project, product, or organization.use the sidebar to navigate to the first section and begin your journey. you can import into your documents content from external . these repositories can be public ( ) or private ( ). any number of public repositories can be used to import content. for private repositories, the number of repositories that can be used to import content to your documents depends on the access key that is configured. the access key and user (organisation) should be configured in for development environment ( and ) and as github action secret (same names) for production environment. private repositories the private repositories must belong to a single github user or organisation repositories currently we support only github repositories innohub support center is the single point of contact for notifying us about the issues that you experience when using our services. exactly as for the content from other files from your documentation, you can import multiple parts of content from external github repositories registration to innohub will grant you with access to the protected content and to innohub services. in order for this to happen, we only need your email, we don’t require any other personal information. we will use your email only for the login process and not for other purposes. however, before registration we strongly encourage you to read our privacy policy . later on, if you enjoy innohub and you would like to access additional services, we may ask you to provide the information that we need in order to allow you to benefit of our services. registration is very simple. from the main menu, select myinnohub and you will easily find the register option. this will direct you to the registration page where you can input the email address and password. you will receive an email for confirmation. follow the link provided by the confirmation email and that’s all. importing code from external repositories is exactly as importing any other content (as earlier explained). the only addition is that you need to wrap the import in markdown code block ticks. import content at run time like shown below. use with care and check if there are potential limitations of the source apis for reading files.