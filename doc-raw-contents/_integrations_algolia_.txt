docaroo provides out-of-the-box full integration with algolia docsearch. full integration means that we provide both algolia index customisation as well as a very powerful and extended ui experience. for algolia search, at the moment, we provide full indexing and index update during site build, but we do not provide (yet) the ui experience. however, for most of the potential use cases of docaroo, algolia docsearch covers any search need. also it is free for ever as long as you meet algolia docsearch eligibility. algolia docsearch ui experience is provided by default once this integration is enabled and properly configured. the search experience has multilanguage support by default. additionally, we provide a very nice feature, meaning that is not always necessary to open the search box to do your search. host select a text on page and see option in the context menu. using algolia docsearch is a configuration but requires minimum knowledge about algolia. integration with algolia docsearch needs only to configure the parameters of the integration after getting them from algolia. activating this integration means: . after receiving the algolia docsearch app information, configure it in file and/or as or modify the default crawler with the script we provide and test the updated crawler configure the index using the configuration we provide (this will generate the minimum necessary index configuration) manually crawl the site and check the records generated in the index re-build and re-deploy the site you may need to consult algolia documentation to understand how to use the crawler editor and how to apply settings on the index. the algolia docsearch integration is based on the next parameters: when the deployment is on or , then the github integration parameters should be configured in as in github or in netlify. the names of the integration parameters is the same, regardless of the deployment environment (local, custom, github pages or netlify). you may need to consult the github documentation or the netlify documentation to find out how to define action secrets (github) or environment variables (netlify). here is an example of how the elements of a well configured algolia docsearch integration may look like: index crawler test crawler modal title info close as described earlier, for algolia search, at the moment, we provide full indexing and index update during site build, but we do not provide (yet) the ui experience. for this reason, using the integration with algolia search requires more advanced developer skills since it is needed to build the ui search experience over the index which is automatically updated when building the site. to use algolia search integration it is needed to: create the algolia search app and (if allowed by your plan) the crawler (if applicable) modify the crawler using the crawler script we provide. test your crawler apply minimum index configuration with the configuration we provide for custom indexes if you already have content published, force full re-build of the site by removing folder. . this will create the records in the index. create the search ui experience. deploy the site the algolia search integration is based on the next parameters: algolia docsearch and regular algolia search can be both active in the same time, although for search purposes docsearch does the job. however, if you are not eligible for algolia docsearch, you may need to use the regular algolia search (on free or paid plans). algolia search index updating the algolia search index at build time will add records to the index only for the site content that was modified since last build (incremental build). if you want to activate algolia search at one moment, be aware that you need to force full re-build of the site. remove folder to force full rebuild and first initialisation of the algolia search index.